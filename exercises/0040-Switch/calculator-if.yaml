title: "Calculator If"
descriptionMd: |
  # Calculator (with _if_)

  Let's write a program that could act as a basic UI for a simple calculator. It is not necessary to implement the full functionality of a calculator. Users should just be able to enter numbers by clicking on digits. Additionally, a _C_ (clear) button should be provided to reset the current number. Here is how the UI should look like:

  ![Calculator UI](https://github.com/rstropek/ts-web-playground/blob/main/exercises/0040-Switch/calculator-if.gif?raw=true)

  Note that your UI implementation must be **responsive**. If you change the size of the canvas (_createCanvas()_), the UI components must be scaled accordingly. For illustration purposes, here are three different variants of the UI with different canvas sizes:

  ![Calculator UI](https://github.com/rstropek/ts-web-playground/blob/main/exercises/0040-Switch/calculator-if.png?raw=true)

  As a first step, use _if_ statements to implement the code for this exercise. In the next exercise, you will refactor the code to use _switch_ statements instead. 

  Note: The second part of this exercise contains a sample solution for this part. **Do not look at it until you have completed this part yourself!** Once you have completed this part, continue with the second part and compare your solution with the sample solution. What did you do differently?

  ## Step 1: Draw the grid

  Start by drawing the grid with black lines. Think about how you must calculate the coordinates of the lines depending on the size of the canvas. To make your life easier, the starter code already calculates the height of a line (_lineHeight_) and the width of a cell (_cellWidth_) for you.

  ## Step 2: Draw the digits

  Draw the digits 0 to 9 and the _C_ button on the screen. Again, think about how you must calculate the coordinates of the digits depending on the size of the canvas.

  ## Step 3: Handle mouse clicks

  Add code to handle mouse clicks. If the user clicks on a digit, it must be added on the right side of the current number. If the user clicks on the _C_ button, the displayed number must be reset to 0.

files:
  "index.ts":
    content: |
      const MARGIN_NUM = 10;

      let num: number = 0;          // Current number entered by the user
      let lineHeight: number = 0;   // Height of a line of the responsive layout
      let cellWidth: number = 0;    // Width of a cell of the responsive layout

      function setup() {
          createCanvas(300, 600);
          lineHeight = height / 5;
          cellWidth = width / 3;
      }

      function draw() {
          background("lightgray");

          // <<< Add code here
      }

      function mouseClicked() {
          // <<< Add code here
      }

    isEditable: true
  "index.html":
    content: |
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="UTF-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1.0" />
          <script src="{{p5Source}}"></script>
          {{topScripts}}
          </head>
        <body>
          {{bodyScripts}}
        </body>
      </html>
    isEditable: false
